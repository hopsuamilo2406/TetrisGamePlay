Component: Arm Compiler for Embedded 6.22 Tool: armlink [5ee90200]

==============================================================================

Small function inlining results

Inlined total of 0 calls.

==============================================================================

Section Cross References

    system_m480.o(.text.SystemCoreClockUpdate) refers to clk.o(.text.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    system_m480.o(.text.SystemCoreClockUpdate) refers to system_m480.o(.data.PllClock) for PllClock
    system_m480.o(.text.SystemCoreClockUpdate) refers to system_m480.o(.data.gau32ClkSrcTbl) for gau32ClkSrcTbl
    system_m480.o(.text.SystemCoreClockUpdate) refers to system_m480.o(.data.SystemCoreClock) for SystemCoreClock
    system_m480.o(.text.SystemCoreClockUpdate) refers to system_m480.o(.data.CyclesPerUs) for CyclesPerUs
    system_m480.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_m480.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_m480.o(.ARM.exidx.text.SystemInit) refers to system_m480.o(.text.SystemInit) for [Anonymous Symbol]
    startup_m480.o(RESET) refers to startup_m480.o(STACK) for __initial_sp
    startup_m480.o(RESET) refers to startup_m480.o(.text) for Reset_Handler
    startup_m480.o(RESET) refers to main.o(.text.TMR1_IRQHandler) for TMR1_IRQHandler
    startup_m480.o(RESET) refers to ebi_lcd_module.o(.text.TMR3_IRQHandler) for TMR3_IRQHandler
    startup_m480.o(RESET) refers to ebi_lcd_module.o(.text.EADC01_IRQHandler) for EADC01_IRQHandler
    startup_m480.o(.text) refers to system_m480.o(.text.SystemInit) for SystemInit
    startup_m480.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    startup_m480.o(.text) refers to retarget.o(.text.ProcessHardFault) for ProcessHardFault
    main.o(.text.new_SystemInit) refers to system_m480.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    main.o(.ARM.exidx.text.new_SystemInit) refers to main.o(.text.new_SystemInit) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.UART0_Init) refers to main.o(.text.UART0_Init) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.Timer1_Init) refers to main.o(.text.Timer1_Init) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.EADC_Init) refers to main.o(.text.EADC_Init) for [Anonymous Symbol]
    main.o(.text.EBI_LCD_Init) refers to clk.o(.text.CLK_EnableModuleClock) for CLK_EnableModuleClock
    main.o(.text.EBI_LCD_Init) refers to gpio.o(.text.GPIO_SetMode) for GPIO_SetMode
    main.o(.ARM.exidx.text.EBI_LCD_Init) refers to main.o(.text.EBI_LCD_Init) for [Anonymous Symbol]
    main.o(.text.LCD_Draw_Rectangular) refers to ebi_lcd_module.o(.text.LCD_BlankArea) for LCD_BlankArea
    main.o(.ARM.exidx.text.LCD_Draw_Rectangular) refers to main.o(.text.LCD_Draw_Rectangular) for [Anonymous Symbol]
    main.o(.text.LCD_Draw_Circle) refers to ebi_lcd_module.o(.text.LCD_SetWindow) for LCD_SetWindow
    main.o(.text.LCD_Draw_Circle) refers to ebi_lcd_module.o(.text.LCD_WR_DATA) for LCD_WR_DATA
    main.o(.ARM.exidx.text.LCD_Draw_Circle) refers to main.o(.text.LCD_Draw_Circle) for [Anonymous Symbol]
    main.o(.text.LCD_Draw_Line) refers to ebi_lcd_module.o(.text.LCD_SetWindow) for LCD_SetWindow
    main.o(.text.LCD_Draw_Line) refers to ebi_lcd_module.o(.text.LCD_WR_DATA) for LCD_WR_DATA
    main.o(.ARM.exidx.text.LCD_Draw_Line) refers to main.o(.text.LCD_Draw_Line) for [Anonymous Symbol]
    main.o(.text.LCD_Draw_Star) refers to main.o(.text.LCD_Draw_Line) for LCD_Draw_Line
    main.o(.ARM.exidx.text.LCD_Draw_Star) refers to main.o(.text.LCD_Draw_Star) for [Anonymous Symbol]
    main.o(.text.main_LCD_Test) refers to ebi_lcd_module.o(.text.LCD_BlankArea) for LCD_BlankArea
    main.o(.text.main_LCD_Test) refers to main.o(.rodata.sample_image) for sample_image
    main.o(.text.main_LCD_Test) refers to ebi_lcd_module.o(.text.LCD_Picture) for LCD_Picture
    main.o(.ARM.exidx.text.main_LCD_Test) refers to main.o(.text.main_LCD_Test) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.TMR1_IRQHandler) refers to main.o(.text.TMR1_IRQHandler) for [Anonymous Symbol]
    main.o(.text.main) refers to system_m480.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    main.o(.text.main) refers to main.o(.text.EBI_LCD_Init) for EBI_LCD_Init
    main.o(.text.main) refers to ebi_lcd_module.o(.text.ILI9341_Initial) for ILI9341_Initial
    main.o(.text.main) refers to ebi_lcd_module.o(.text.LCD_BlankArea) for LCD_BlankArea
    main.o(.text.main) refers to main.o(.text.LCD_Draw_Rectangular) for LCD_Draw_Rectangular
    main.o(.text.main) refers to main.o(.text.LCD_Draw_Circle) for LCD_Draw_Circle
    main.o(.text.main) refers to ebi_lcd_module.o(.text.LCD_SetWindow) for LCD_SetWindow
    main.o(.text.main) refers to ebi_lcd_module.o(.text.LCD_WR_DATA) for LCD_WR_DATA
    main.o(.text.main) refers to main.o(.rodata.sample_image) for sample_image
    main.o(.text.main) refers to ebi_lcd_module.o(.text.LCD_Picture) for LCD_Picture
    main.o(.text.main) refers to puts.o(i.puts) for puts
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    ebi_lcd_module.o(.ARM.exidx.text.LCD_Picture) refers to ebi_lcd_module.o(.text.LCD_Picture) for [Anonymous Symbol]
    ebi_lcd_module.o(.ARM.exidx.text.LCD_SetWindow) refers to ebi_lcd_module.o(.text.LCD_SetWindow) for [Anonymous Symbol]
    ebi_lcd_module.o(.ARM.exidx.text.LCD_WR_DATA) refers to ebi_lcd_module.o(.text.LCD_WR_DATA) for [Anonymous Symbol]
    ebi_lcd_module.o(.text.TMR3_IRQHandler) refers to ebi_lcd_module.o(.bss.Timer3_flag) for Timer3_flag
    ebi_lcd_module.o(.text.TMR3_IRQHandler) refers to ebi_lcd_module.o(.bss.Timer3_cnt) for Timer3_cnt
    ebi_lcd_module.o(.ARM.exidx.text.TMR3_IRQHandler) refers to ebi_lcd_module.o(.text.TMR3_IRQHandler) for [Anonymous Symbol]
    ebi_lcd_module.o(.text.Timer3_Init) refers to ebi_lcd_module.o(.bss.Timer3_flag) for Timer3_flag
    ebi_lcd_module.o(.text.Timer3_Init) refers to ebi_lcd_module.o(.bss.Timer3_cnt) for Timer3_cnt
    ebi_lcd_module.o(.ARM.exidx.text.Timer3_Init) refers to ebi_lcd_module.o(.text.Timer3_Init) for [Anonymous Symbol]
    ebi_lcd_module.o(.ARM.exidx.text.LCD_WR_REG) refers to ebi_lcd_module.o(.text.LCD_WR_REG) for [Anonymous Symbol]
    ebi_lcd_module.o(.ARM.exidx.text.LCD_RD_DATA) refers to ebi_lcd_module.o(.text.LCD_RD_DATA) for [Anonymous Symbol]
    ebi_lcd_module.o(.text.ILI9341_Initial) refers to system_m480.o(.data.CyclesPerUs) for CyclesPerUs
    ebi_lcd_module.o(.text.ILI9341_Initial) refers to puts.o(i.puts) for puts
    ebi_lcd_module.o(.ARM.exidx.text.ILI9341_Initial) refers to ebi_lcd_module.o(.text.ILI9341_Initial) for [Anonymous Symbol]
    ebi_lcd_module.o(.ARM.exidx.text.LCD_PutString) refers to ebi_lcd_module.o(.text.LCD_PutString) for [Anonymous Symbol]
    ebi_lcd_module.o(.ARM.exidx.text.LCD_BlankArea) refers to ebi_lcd_module.o(.text.LCD_BlankArea) for [Anonymous Symbol]
    ebi_lcd_module.o(.text.Get_TP_X) refers to gpio.o(.text.GPIO_SetMode) for GPIO_SetMode
    ebi_lcd_module.o(.text.Get_TP_X) refers to eadc.o(.text.EADC_ConfigSampleModule) for EADC_ConfigSampleModule
    ebi_lcd_module.o(.text.Get_TP_X) refers to ebi_lcd_module.o(.bss.g_u32AdcIntFlag_TP) for g_u32AdcIntFlag_TP
    ebi_lcd_module.o(.text.Get_TP_X) refers to dflti.o(.text) for __aeabi_i2d
    ebi_lcd_module.o(.text.Get_TP_X) refers to ddiv.o(.text) for __aeabi_ddiv
    ebi_lcd_module.o(.text.Get_TP_X) refers to dfixi.o(.text) for __aeabi_d2iz
    ebi_lcd_module.o(.text.Get_TP_X) refers to printf8.o(i.__0printf$8) for __2printf
    ebi_lcd_module.o(.ARM.exidx.text.Get_TP_X) refers to ebi_lcd_module.o(.text.Get_TP_X) for [Anonymous Symbol]
    ebi_lcd_module.o(.text.Get_TP_Y) refers to gpio.o(.text.GPIO_SetMode) for GPIO_SetMode
    ebi_lcd_module.o(.text.Get_TP_Y) refers to eadc.o(.text.EADC_ConfigSampleModule) for EADC_ConfigSampleModule
    ebi_lcd_module.o(.text.Get_TP_Y) refers to ebi_lcd_module.o(.bss.g_u32AdcIntFlag_TP) for g_u32AdcIntFlag_TP
    ebi_lcd_module.o(.text.Get_TP_Y) refers to dflti.o(.text) for __aeabi_i2d
    ebi_lcd_module.o(.text.Get_TP_Y) refers to ddiv.o(.text) for __aeabi_ddiv
    ebi_lcd_module.o(.text.Get_TP_Y) refers to dfixi.o(.text) for __aeabi_d2iz
    ebi_lcd_module.o(.text.Get_TP_Y) refers to printf8.o(i.__0printf$8) for __2printf
    ebi_lcd_module.o(.ARM.exidx.text.Get_TP_Y) refers to ebi_lcd_module.o(.text.Get_TP_Y) for [Anonymous Symbol]
    ebi_lcd_module.o(.text.EADC01_IRQHandler) refers to ebi_lcd_module.o(.bss.g_u32AdcIntFlag_TP) for g_u32AdcIntFlag_TP
    ebi_lcd_module.o(.ARM.exidx.text.EADC01_IRQHandler) refers to ebi_lcd_module.o(.text.EADC01_IRQHandler) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_DisableCKO) refers to clk.o(.text.CLK_DisableCKO) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_DisableModuleClock) refers to clk.o(.text.CLK_DisableModuleClock) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_EnableCKO) refers to clk.o(.text.CLK_EnableCKO) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_EnableModuleClock) refers to clk.o(.text.CLK_EnableModuleClock) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_SetModuleClock) refers to clk.o(.text.CLK_SetModuleClock) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_PowerDown) refers to clk.o(.text.CLK_PowerDown) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_Idle) refers to clk.o(.text.CLK_Idle) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_GetHXTFreq) refers to clk.o(.text.CLK_GetHXTFreq) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_GetLXTFreq) refers to clk.o(.text.CLK_GetLXTFreq) for [Anonymous Symbol]
    clk.o(.text.CLK_GetPCLK0Freq) refers to system_m480.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk.o(.text.CLK_GetPCLK0Freq) refers to system_m480.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.ARM.exidx.text.CLK_GetPCLK0Freq) refers to clk.o(.text.CLK_GetPCLK0Freq) for [Anonymous Symbol]
    clk.o(.text.CLK_GetPCLK1Freq) refers to system_m480.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk.o(.text.CLK_GetPCLK1Freq) refers to system_m480.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.ARM.exidx.text.CLK_GetPCLK1Freq) refers to clk.o(.text.CLK_GetPCLK1Freq) for [Anonymous Symbol]
    clk.o(.text.CLK_GetHCLKFreq) refers to system_m480.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk.o(.text.CLK_GetHCLKFreq) refers to system_m480.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.ARM.exidx.text.CLK_GetHCLKFreq) refers to clk.o(.text.CLK_GetHCLKFreq) for [Anonymous Symbol]
    clk.o(.text.CLK_GetCPUFreq) refers to system_m480.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk.o(.text.CLK_GetCPUFreq) refers to system_m480.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.ARM.exidx.text.CLK_GetCPUFreq) refers to clk.o(.text.CLK_GetCPUFreq) for [Anonymous Symbol]
    clk.o(.text.CLK_SetCoreClock) refers to system_m480.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.text.CLK_SetCoreClock) refers to clk.o(.bss.g_CLK_i32ErrCode) for g_CLK_i32ErrCode
    clk.o(.text.CLK_SetCoreClock) refers to clk.o(.text.CLK_EnablePLL) for CLK_EnablePLL
    clk.o(.text.CLK_SetCoreClock) refers to system_m480.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk.o(.ARM.exidx.text.CLK_SetCoreClock) refers to clk.o(.text.CLK_SetCoreClock) for [Anonymous Symbol]
    clk.o(.text.CLK_WaitClockReady) refers to system_m480.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.text.CLK_WaitClockReady) refers to clk.o(.bss.g_CLK_i32ErrCode) for g_CLK_i32ErrCode
    clk.o(.ARM.exidx.text.CLK_WaitClockReady) refers to clk.o(.text.CLK_WaitClockReady) for [Anonymous Symbol]
    clk.o(.text.CLK_EnablePLL) refers to system_m480.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.text.CLK_EnablePLL) refers to clk.o(.bss.g_CLK_i32ErrCode) for g_CLK_i32ErrCode
    clk.o(.text.CLK_EnablePLL) refers to clk.o(.rodata.cst4) for .L__const.CLK_GetPLLClockFreq.au8NoTbl
    clk.o(.ARM.exidx.text.CLK_EnablePLL) refers to clk.o(.text.CLK_EnablePLL) for [Anonymous Symbol]
    clk.o(.text.CLK_SetHCLK) refers to clk.o(.bss.g_CLK_i32ErrCode) for g_CLK_i32ErrCode
    clk.o(.text.CLK_SetHCLK) refers to system_m480.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.text.CLK_SetHCLK) refers to system_m480.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk.o(.ARM.exidx.text.CLK_SetHCLK) refers to clk.o(.text.CLK_SetHCLK) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_SetSysTickClockSrc) refers to clk.o(.text.CLK_SetSysTickClockSrc) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_EnableXtalRC) refers to clk.o(.text.CLK_EnableXtalRC) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_DisableXtalRC) refers to clk.o(.text.CLK_DisableXtalRC) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_DisablePLL) refers to clk.o(.text.CLK_DisablePLL) for [Anonymous Symbol]
    clk.o(.text.CLK_GetPLLClockFreq) refers to clk.o(.rodata.cst4) for .L__const.CLK_GetPLLClockFreq.au8NoTbl
    clk.o(.ARM.exidx.text.CLK_GetPLLClockFreq) refers to clk.o(.text.CLK_GetPLLClockFreq) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_EnableSysTick) refers to clk.o(.text.CLK_EnableSysTick) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_DisableSysTick) refers to clk.o(.text.CLK_DisableSysTick) for [Anonymous Symbol]
    clk.o(.text.CLK_SetPowerDownMode) refers to clk.o(.bss.g_CLK_i32ErrCode) for g_CLK_i32ErrCode
    clk.o(.text.CLK_SetPowerDownMode) refers to system_m480.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.ARM.exidx.text.CLK_SetPowerDownMode) refers to clk.o(.text.CLK_SetPowerDownMode) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_EnableDPDWKPin) refers to clk.o(.text.CLK_EnableDPDWKPin) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_GetPMUWKSrc) refers to clk.o(.text.CLK_GetPMUWKSrc) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_EnableSPDWKPin) refers to clk.o(.text.CLK_EnableSPDWKPin) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_GetModuleClockSource) refers to clk.o(.text.CLK_GetModuleClockSource) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_GetModuleClockDivider) refers to clk.o(.text.CLK_GetModuleClockDivider) for [Anonymous Symbol]
    retarget.o(.text.__aeabi_assert) refers to stderr.o(.data) for __stderr
    retarget.o(.text.__aeabi_assert) refers to fwrite.o(i.fwrite) for fwrite
    retarget.o(.text.__aeabi_assert) refers to fputs.o(i.fputs) for fputs
    retarget.o(.ARM.exidx.text.__aeabi_assert) refers to retarget.o(.text.__aeabi_assert) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.abort) refers to retarget.o(.text.abort) for [Anonymous Symbol]
    retarget.o(.text.ProcessHardFault) refers to printf8.o(i.__0printf$8) for __2printf
    retarget.o(.text.ProcessHardFault) refers to puts.o(i.puts) for puts
    retarget.o(.text.ProcessHardFault) refers to retarget.o(.rodata.str1.1) for .Lstr.16
    retarget.o(.ARM.exidx.text.ProcessHardFault) refers to retarget.o(.text.ProcessHardFault) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.SendChar_ToUART) refers to retarget.o(.text.SendChar_ToUART) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.SendChar) refers to retarget.o(.text.SendChar) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.GetChar) refers to retarget.o(.text.GetChar) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.kbhit) refers to retarget.o(.text.kbhit) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.IsDebugFifoEmpty) refers to retarget.o(.text.IsDebugFifoEmpty) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text._ttywrch) refers to retarget.o(.text._ttywrch) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.fputc) refers to retarget.o(.text.fputc) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.fgetc) refers to retarget.o(.text.fgetc) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.ferror) refers to retarget.o(.text.ferror) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_ClearResetSrc) refers to sys.o(.text.SYS_ClearResetSrc) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_GetBODStatus) refers to sys.o(.text.SYS_GetBODStatus) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_GetResetSrc) refers to sys.o(.text.SYS_GetResetSrc) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_IsRegLocked) refers to sys.o(.text.SYS_IsRegLocked) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_ReadPDID) refers to sys.o(.text.SYS_ReadPDID) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_ResetChip) refers to sys.o(.text.SYS_ResetChip) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_ResetCPU) refers to sys.o(.text.SYS_ResetCPU) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_ResetModule) refers to sys.o(.text.SYS_ResetModule) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_EnableBOD) refers to sys.o(.text.SYS_EnableBOD) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_DisableBOD) refers to sys.o(.text.SYS_DisableBOD) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_SetPowerLevel) refers to sys.o(.text.SYS_SetPowerLevel) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_SetVRef) refers to sys.o(.text.SYS_SetVRef) for [Anonymous Symbol]
    timer.o(.text.TIMER_Open) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    timer.o(.text.TIMER_Open) refers to timer.o(.rodata.cst32) for .L__const.TIMER_GetModuleClock.au32Clk
    timer.o(.text.TIMER_Open) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    timer.o(.ARM.exidx.text.TIMER_Open) refers to timer.o(.text.TIMER_Open) for [Anonymous Symbol]
    timer.o(.text.TIMER_GetModuleClock) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    timer.o(.text.TIMER_GetModuleClock) refers to timer.o(.rodata.cst32) for .L__const.TIMER_GetModuleClock.au32Clk
    timer.o(.text.TIMER_GetModuleClock) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    timer.o(.ARM.exidx.text.TIMER_GetModuleClock) refers to timer.o(.text.TIMER_GetModuleClock) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TIMER_Close) refers to timer.o(.text.TIMER_Close) for [Anonymous Symbol]
    timer.o(.text.TIMER_Delay) refers to timer.o(.rodata.cst32) for .L__const.TIMER_GetModuleClock.au32Clk
    timer.o(.text.TIMER_Delay) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    timer.o(.text.TIMER_Delay) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    timer.o(.text.TIMER_Delay) refers to system_m480.o(.data.SystemCoreClock) for SystemCoreClock
    timer.o(.ARM.exidx.text.TIMER_Delay) refers to timer.o(.text.TIMER_Delay) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TIMER_EnableCapture) refers to timer.o(.text.TIMER_EnableCapture) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TIMER_DisableCapture) refers to timer.o(.text.TIMER_DisableCapture) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TIMER_EnableEventCounter) refers to timer.o(.text.TIMER_EnableEventCounter) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TIMER_DisableEventCounter) refers to timer.o(.text.TIMER_DisableEventCounter) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TIMER_EnableFreqCounter) refers to timer.o(.text.TIMER_EnableFreqCounter) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TIMER_DisableFreqCounter) refers to timer.o(.text.TIMER_DisableFreqCounter) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TIMER_SetTriggerSource) refers to timer.o(.text.TIMER_SetTriggerSource) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TIMER_SetTriggerTarget) refers to timer.o(.text.TIMER_SetTriggerTarget) for [Anonymous Symbol]
    timer.o(.text.TIMER_ResetCounter) refers to system_m480.o(.data.SystemCoreClock) for SystemCoreClock
    timer.o(.text.TIMER_ResetCounter) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    timer.o(.text.TIMER_ResetCounter) refers to timer.o(.rodata.cst32) for .L__const.TIMER_GetModuleClock.au32Clk
    timer.o(.text.TIMER_ResetCounter) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    timer.o(.ARM.exidx.text.TIMER_ResetCounter) refers to timer.o(.text.TIMER_ResetCounter) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_ClearIntFlag) refers to uart.o(.text.UART_ClearIntFlag) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_Close) refers to uart.o(.text.UART_Close) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_DisableFlowCtrl) refers to uart.o(.text.UART_DisableFlowCtrl) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_DisableInt) refers to uart.o(.text.UART_DisableInt) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_EnableFlowCtrl) refers to uart.o(.text.UART_EnableFlowCtrl) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_EnableInt) refers to uart.o(.text.UART_EnableInt) for [Anonymous Symbol]
    uart.o(.text.UART_Open) refers to clk.o(.text.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    uart.o(.ARM.exidx.text.UART_Open) refers to uart.o(.text.UART_Open) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_Read) refers to uart.o(.text.UART_Read) for [Anonymous Symbol]
    uart.o(.text.UART_SetLineConfig) refers to clk.o(.text.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    uart.o(.ARM.exidx.text.UART_SetLineConfig) refers to uart.o(.text.UART_SetLineConfig) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_SetTimeoutCnt) refers to uart.o(.text.UART_SetTimeoutCnt) for [Anonymous Symbol]
    uart.o(.text.UART_SelectIrDAMode) refers to clk.o(.text.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    uart.o(.ARM.exidx.text.UART_SelectIrDAMode) refers to uart.o(.text.UART_SelectIrDAMode) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_SelectRS485Mode) refers to uart.o(.text.UART_SelectRS485Mode) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_SelectLINMode) refers to uart.o(.text.UART_SelectLINMode) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_Write) refers to uart.o(.text.UART_Write) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_SetMode) refers to gpio.o(.text.GPIO_SetMode) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_EnableInt) refers to gpio.o(.text.GPIO_EnableInt) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_DisableInt) refers to gpio.o(.text.GPIO_DisableInt) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_SetSlewCtl) refers to gpio.o(.text.GPIO_SetSlewCtl) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_SetPullCtl) refers to gpio.o(.text.GPIO_SetPullCtl) for [Anonymous Symbol]
    eadc.o(.text.EADC_Open) refers to system_m480.o(.data.SystemCoreClock) for SystemCoreClock
    eadc.o(.text.EADC_Open) refers to eadc.o(.bss.g_EADC_i32ErrCode) for g_EADC_i32ErrCode
    eadc.o(.ARM.exidx.text.EADC_Open) refers to eadc.o(.text.EADC_Open) for [Anonymous Symbol]
    eadc.o(.ARM.exidx.text.EADC_Close) refers to eadc.o(.text.EADC_Close) for [Anonymous Symbol]
    eadc.o(.ARM.exidx.text.EADC_ConfigSampleModule) refers to eadc.o(.text.EADC_ConfigSampleModule) for [Anonymous Symbol]
    eadc.o(.ARM.exidx.text.EADC_SetTriggerDelayTime) refers to eadc.o(.text.EADC_SetTriggerDelayTime) for [Anonymous Symbol]
    eadc.o(.ARM.exidx.text.EADC_SetExtendSampleTime) refers to eadc.o(.text.EADC_SetExtendSampleTime) for [Anonymous Symbol]
    ebi.o(.ARM.exidx.text.EBI_Open) refers to ebi.o(.text.EBI_Open) for [Anonymous Symbol]
    ebi.o(.ARM.exidx.text.EBI_Close) refers to ebi.o(.text.EBI_Close) for [Anonymous Symbol]
    ebi.o(.ARM.exidx.text.EBI_SetBusTiming) refers to ebi.o(.text.EBI_SetBusTiming) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    fputs.o(i.fputs) refers to retarget.o(.text.fputc) for fputc
    puts.o(i.puts) refers to retarget.o(.text.fputc) for fputc
    puts.o(i.puts) refers to retarget.o(.bss.__stdout) for __stdout
    fwrite.o(i.fwrite) refers to retarget.o(.text.fputc) for fputc
    fputs_e.o(.text) refers to retarget.o(.text.fputc) for fputc
    puts_e.o(.text) refers to retarget.o(.text.fputc) for fputc
    puts_e.o(.text) refers to retarget.o(.bss.__stdout) for __stdout
    fwrite_e.o(.text) refers to retarget.o(.text.fputc) for fputc
    printfb.o(i.__0fprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf$bare) refers to retarget.o(.text.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf$bare) refers to retarget.o(.text.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to retarget.o(.bss.__stdout) for __stdout
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vfprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf$bare) refers to retarget.o(.text.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf$bare) refers to retarget.o(.text.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to retarget.o(.bss.__stdout) for __stdout
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printf0.o(i.__0fprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf$0) refers to retarget.o(.text.fputc) for fputc
    printf0.o(i.__0printf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf$0) refers to retarget.o(.text.fputc) for fputc
    printf0.o(i.__0printf$0) refers to retarget.o(.bss.__stdout) for __stdout
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vfprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf$0) refers to retarget.o(.text.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf$0) refers to retarget.o(.text.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to retarget.o(.bss.__stdout) for __stdout
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf1.o(i.__0fprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf$1) refers to retarget.o(.text.fputc) for fputc
    printf1.o(i.__0printf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf$1) refers to retarget.o(.text.fputc) for fputc
    printf1.o(i.__0printf$1) refers to retarget.o(.bss.__stdout) for __stdout
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vfprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf$1) refers to retarget.o(.text.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf$1) refers to retarget.o(.text.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to retarget.o(.bss.__stdout) for __stdout
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf2.o(i.__0fprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf$2) refers to retarget.o(.text.fputc) for fputc
    printf2.o(i.__0printf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf$2) refers to retarget.o(.text.fputc) for fputc
    printf2.o(i.__0printf$2) refers to retarget.o(.bss.__stdout) for __stdout
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vfprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf$2) refers to retarget.o(.text.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf$2) refers to retarget.o(.text.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to retarget.o(.bss.__stdout) for __stdout
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf3.o(i.__0fprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf$3) refers to retarget.o(.text.fputc) for fputc
    printf3.o(i.__0printf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf$3) refers to retarget.o(.text.fputc) for fputc
    printf3.o(i.__0printf$3) refers to retarget.o(.bss.__stdout) for __stdout
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vfprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf$3) refers to retarget.o(.text.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf$3) refers to retarget.o(.text.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to retarget.o(.bss.__stdout) for __stdout
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf4.o(i.__0fprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf$4) refers to retarget.o(.text.fputc) for fputc
    printf4.o(i.__0printf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf$4) refers to retarget.o(.text.fputc) for fputc
    printf4.o(i.__0printf$4) refers to retarget.o(.bss.__stdout) for __stdout
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vfprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf$4) refers to retarget.o(.text.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf$4) refers to retarget.o(.text.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to retarget.o(.bss.__stdout) for __stdout
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf$5) refers to retarget.o(.text.fputc) for fputc
    printf5.o(i.__0printf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf$5) refers to retarget.o(.text.fputc) for fputc
    printf5.o(i.__0printf$5) refers to retarget.o(.bss.__stdout) for __stdout
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vfprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf$5) refers to retarget.o(.text.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf$5) refers to retarget.o(.text.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to retarget.o(.bss.__stdout) for __stdout
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf6.o(i.__0fprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf$6) refers to retarget.o(.text.fputc) for fputc
    printf6.o(i.__0printf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf$6) refers to retarget.o(.text.fputc) for fputc
    printf6.o(i.__0printf$6) refers to retarget.o(.bss.__stdout) for __stdout
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vfprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf$6) refers to retarget.o(.text.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf$6) refers to retarget.o(.text.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to retarget.o(.bss.__stdout) for __stdout
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i.__0fprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf$7) refers to retarget.o(.text.fputc) for fputc
    printf7.o(i.__0printf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf$7) refers to retarget.o(.text.fputc) for fputc
    printf7.o(i.__0printf$7) refers to retarget.o(.bss.__stdout) for __stdout
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vfprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf$7) refers to retarget.o(.text.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf$7) refers to retarget.o(.text.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to retarget.o(.bss.__stdout) for __stdout
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i.__0fprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf$8) refers to retarget.o(.text.fputc) for fputc
    printf8.o(i.__0printf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf$8) refers to retarget.o(.text.fputc) for fputc
    printf8.o(i.__0printf$8) refers to retarget.o(.bss.__stdout) for __stdout
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vfprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf$8) refers to retarget.o(.text.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf$8) refers to retarget.o(.text.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to retarget.o(.bss.__stdout) for __stdout
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to retarget.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to retarget.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers to retarget.o(.bss.__stdout) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to retarget.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to retarget.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers to retarget.o(.bss.__stdout) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dflti.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dflti.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfixi.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixi.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_m480.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_m480.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfixul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    cdrcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing system_m480.o(.text), (0 bytes).
    Removing system_m480.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_m480.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing startup_m480.o(HEAP), (256 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.text.new_SystemInit), (74 bytes).
    Removing main.o(.ARM.exidx.text.new_SystemInit), (8 bytes).
    Removing main.o(.text.UART0_Init), (72 bytes).
    Removing main.o(.ARM.exidx.text.UART0_Init), (8 bytes).
    Removing main.o(.text.Timer1_Init), (76 bytes).
    Removing main.o(.ARM.exidx.text.Timer1_Init), (8 bytes).
    Removing main.o(.text.EADC_Init), (86 bytes).
    Removing main.o(.ARM.exidx.text.EADC_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.EBI_LCD_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.LCD_Draw_Rectangular), (8 bytes).
    Removing main.o(.ARM.exidx.text.LCD_Draw_Circle), (8 bytes).
    Removing main.o(.text.LCD_Draw_Line), (178 bytes).
    Removing main.o(.ARM.exidx.text.LCD_Draw_Line), (8 bytes).
    Removing main.o(.text.LCD_Draw_Star), (348 bytes).
    Removing main.o(.ARM.exidx.text.LCD_Draw_Star), (8 bytes).
    Removing main.o(.text.main_LCD_Test), (56 bytes).
    Removing main.o(.ARM.exidx.text.main_LCD_Test), (8 bytes).
    Removing main.o(.ARM.exidx.text.TMR1_IRQHandler), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing ebi_lcd_module.o(.text), (0 bytes).
    Removing ebi_lcd_module.o(.ARM.exidx.text.LCD_Picture), (8 bytes).
    Removing ebi_lcd_module.o(.ARM.exidx.text.LCD_SetWindow), (8 bytes).
    Removing ebi_lcd_module.o(.ARM.exidx.text.LCD_WR_DATA), (8 bytes).
    Removing ebi_lcd_module.o(.ARM.exidx.text.TMR3_IRQHandler), (8 bytes).
    Removing ebi_lcd_module.o(.text.Timer3_Init), (68 bytes).
    Removing ebi_lcd_module.o(.ARM.exidx.text.Timer3_Init), (8 bytes).
    Removing ebi_lcd_module.o(.text.LCD_WR_REG), (24 bytes).
    Removing ebi_lcd_module.o(.ARM.exidx.text.LCD_WR_REG), (8 bytes).
    Removing ebi_lcd_module.o(.text.LCD_RD_DATA), (10 bytes).
    Removing ebi_lcd_module.o(.ARM.exidx.text.LCD_RD_DATA), (8 bytes).
    Removing ebi_lcd_module.o(.ARM.exidx.text.ILI9341_Initial), (8 bytes).
    Removing ebi_lcd_module.o(.text.LCD_PutString), (68 bytes).
    Removing ebi_lcd_module.o(.ARM.exidx.text.LCD_PutString), (8 bytes).
    Removing ebi_lcd_module.o(.ARM.exidx.text.LCD_BlankArea), (8 bytes).
    Removing ebi_lcd_module.o(.text.Get_TP_X), (272 bytes).
    Removing ebi_lcd_module.o(.ARM.exidx.text.Get_TP_X), (8 bytes).
    Removing ebi_lcd_module.o(.text.Get_TP_Y), (276 bytes).
    Removing ebi_lcd_module.o(.ARM.exidx.text.Get_TP_Y), (8 bytes).
    Removing ebi_lcd_module.o(.ARM.exidx.text.EADC01_IRQHandler), (8 bytes).
    Removing clk.o(.text), (0 bytes).
    Removing clk.o(.text.CLK_DisableCKO), (18 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_DisableCKO), (8 bytes).
    Removing clk.o(.text.CLK_DisableModuleClock), (36 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_DisableModuleClock), (8 bytes).
    Removing clk.o(.text.CLK_EnableCKO), (38 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnableCKO), (8 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnableModuleClock), (8 bytes).
    Removing clk.o(.text.CLK_SetModuleClock), (158 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_SetModuleClock), (8 bytes).
    Removing clk.o(.text.CLK_PowerDown), (50 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_PowerDown), (8 bytes).
    Removing clk.o(.text.CLK_Idle), (36 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_Idle), (8 bytes).
    Removing clk.o(.text.CLK_GetHXTFreq), (28 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetHXTFreq), (8 bytes).
    Removing clk.o(.text.CLK_GetLXTFreq), (20 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetLXTFreq), (8 bytes).
    Removing clk.o(.text.CLK_GetPCLK0Freq), (128 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetPCLK0Freq), (8 bytes).
    Removing clk.o(.text.CLK_GetPCLK1Freq), (130 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetPCLK1Freq), (8 bytes).
    Removing clk.o(.text.CLK_GetHCLKFreq), (18 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetHCLKFreq), (8 bytes).
    Removing clk.o(.text.CLK_GetCPUFreq), (18 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetCPUFreq), (8 bytes).
    Removing clk.o(.text.CLK_SetCoreClock), (336 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_SetCoreClock), (8 bytes).
    Removing clk.o(.text.CLK_WaitClockReady), (108 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_WaitClockReady), (8 bytes).
    Removing clk.o(.text.CLK_EnablePLL), (1364 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnablePLL), (8 bytes).
    Removing clk.o(.text.CLK_SetHCLK), (168 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_SetHCLK), (8 bytes).
    Removing clk.o(.text.CLK_SetSysTickClockSrc), (20 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_SetSysTickClockSrc), (8 bytes).
    Removing clk.o(.text.CLK_EnableXtalRC), (16 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnableXtalRC), (8 bytes).
    Removing clk.o(.text.CLK_DisableXtalRC), (18 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_DisableXtalRC), (8 bytes).
    Removing clk.o(.text.CLK_DisablePLL), (18 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_DisablePLL), (8 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetPLLClockFreq), (8 bytes).
    Removing clk.o(.text.CLK_EnableSysTick), (64 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnableSysTick), (8 bytes).
    Removing clk.o(.text.CLK_DisableSysTick), (14 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_DisableSysTick), (8 bytes).
    Removing clk.o(.text.CLK_SetPowerDownMode), (168 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_SetPowerDownMode), (8 bytes).
    Removing clk.o(.text.CLK_EnableDPDWKPin), (86 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnableDPDWKPin), (8 bytes).
    Removing clk.o(.text.CLK_GetPMUWKSrc), (12 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetPMUWKSrc), (8 bytes).
    Removing clk.o(.text.CLK_EnableSPDWKPin), (40 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnableSPDWKPin), (8 bytes).
    Removing clk.o(.text.CLK_GetModuleClockSource), (180 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetModuleClockSource), (8 bytes).
    Removing clk.o(.text.CLK_GetModuleClockDivider), (100 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetModuleClockDivider), (8 bytes).
    Removing clk.o(.bss.g_CLK_i32ErrCode), (4 bytes).
    Removing retarget.o(.text), (0 bytes).
    Removing retarget.o(.text.__aeabi_assert), (316 bytes).
    Removing retarget.o(.ARM.exidx.text.__aeabi_assert), (8 bytes).
    Removing retarget.o(.text.abort), (2 bytes).
    Removing retarget.o(.ARM.exidx.text.abort), (8 bytes).
    Removing retarget.o(.ARM.exidx.text.ProcessHardFault), (8 bytes).
    Removing retarget.o(.text.SendChar_ToUART), (74 bytes).
    Removing retarget.o(.ARM.exidx.text.SendChar_ToUART), (8 bytes).
    Removing retarget.o(.text.SendChar), (74 bytes).
    Removing retarget.o(.ARM.exidx.text.SendChar), (8 bytes).
    Removing retarget.o(.text.GetChar), (40 bytes).
    Removing retarget.o(.ARM.exidx.text.GetChar), (8 bytes).
    Removing retarget.o(.text.kbhit), (14 bytes).
    Removing retarget.o(.ARM.exidx.text.kbhit), (8 bytes).
    Removing retarget.o(.text.IsDebugFifoEmpty), (14 bytes).
    Removing retarget.o(.ARM.exidx.text.IsDebugFifoEmpty), (8 bytes).
    Removing retarget.o(.text._ttywrch), (74 bytes).
    Removing retarget.o(.ARM.exidx.text._ttywrch), (8 bytes).
    Removing retarget.o(.ARM.exidx.text.fputc), (8 bytes).
    Removing retarget.o(.text.fgetc), (40 bytes).
    Removing retarget.o(.ARM.exidx.text.fgetc), (8 bytes).
    Removing retarget.o(.text.ferror), (6 bytes).
    Removing retarget.o(.ARM.exidx.text.ferror), (8 bytes).
    Removing retarget.o(.bss.__stdin), (84 bytes).
    Removing sys.o(.text), (0 bytes).
    Removing sys.o(.text.SYS_ClearResetSrc), (14 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_ClearResetSrc), (8 bytes).
    Removing sys.o(.text.SYS_GetBODStatus), (14 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_GetBODStatus), (8 bytes).
    Removing sys.o(.text.SYS_GetResetSrc), (10 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_GetResetSrc), (8 bytes).
    Removing sys.o(.text.SYS_IsRegLocked), (18 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_IsRegLocked), (8 bytes).
    Removing sys.o(.text.SYS_ReadPDID), (8 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_ReadPDID), (8 bytes).
    Removing sys.o(.text.SYS_ResetChip), (16 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_ResetChip), (8 bytes).
    Removing sys.o(.text.SYS_ResetCPU), (16 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_ResetCPU), (8 bytes).
    Removing sys.o(.text.SYS_ResetModule), (36 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_ResetModule), (8 bytes).
    Removing sys.o(.text.SYS_EnableBOD), (36 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_EnableBOD), (8 bytes).
    Removing sys.o(.text.SYS_DisableBOD), (16 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_DisableBOD), (8 bytes).
    Removing sys.o(.text.SYS_SetPowerLevel), (20 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_SetPowerLevel), (8 bytes).
    Removing sys.o(.text.SYS_SetVRef), (18 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_SetVRef), (8 bytes).
    Removing timer.o(.text), (0 bytes).
    Removing timer.o(.text.TIMER_Open), (170 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_Open), (8 bytes).
    Removing timer.o(.text.TIMER_GetModuleClock), (104 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_GetModuleClock), (8 bytes).
    Removing timer.o(.text.TIMER_Close), (8 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_Close), (8 bytes).
    Removing timer.o(.text.TIMER_Delay), (430 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_Delay), (8 bytes).
    Removing timer.o(.text.TIMER_EnableCapture), (24 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_EnableCapture), (8 bytes).
    Removing timer.o(.text.TIMER_DisableCapture), (10 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_DisableCapture), (8 bytes).
    Removing timer.o(.text.TIMER_EnableEventCounter), (20 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_EnableEventCounter), (8 bytes).
    Removing timer.o(.text.TIMER_DisableEventCounter), (10 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_DisableEventCounter), (8 bytes).
    Removing timer.o(.text.TIMER_EnableFreqCounter), (66 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_EnableFreqCounter), (8 bytes).
    Removing timer.o(.text.TIMER_DisableFreqCounter), (10 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_DisableFreqCounter), (8 bytes).
    Removing timer.o(.text.TIMER_SetTriggerSource), (12 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_SetTriggerSource), (8 bytes).
    Removing timer.o(.text.TIMER_SetTriggerTarget), (12 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_SetTriggerTarget), (8 bytes).
    Removing timer.o(.text.TIMER_ResetCounter), (216 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_ResetCounter), (8 bytes).
    Removing timer.o(.rodata.cst32), (32 bytes).
    Removing uart.o(.text), (0 bytes).
    Removing uart.o(.text.UART_ClearIntFlag), (62 bytes).
    Removing uart.o(.ARM.exidx.text.UART_ClearIntFlag), (8 bytes).
    Removing uart.o(.text.UART_Close), (6 bytes).
    Removing uart.o(.ARM.exidx.text.UART_Close), (8 bytes).
    Removing uart.o(.text.UART_DisableFlowCtrl), (10 bytes).
    Removing uart.o(.ARM.exidx.text.UART_DisableFlowCtrl), (8 bytes).
    Removing uart.o(.text.UART_DisableInt), (10 bytes).
    Removing uart.o(.ARM.exidx.text.UART_DisableInt), (8 bytes).
    Removing uart.o(.text.UART_EnableFlowCtrl), (26 bytes).
    Removing uart.o(.ARM.exidx.text.UART_EnableFlowCtrl), (8 bytes).
    Removing uart.o(.text.UART_EnableInt), (8 bytes).
    Removing uart.o(.ARM.exidx.text.UART_EnableInt), (8 bytes).
    Removing uart.o(.text.UART_Open), (372 bytes).
    Removing uart.o(.ARM.exidx.text.UART_Open), (8 bytes).
    Removing uart.o(.text.UART_Read), (190 bytes).
    Removing uart.o(.ARM.exidx.text.UART_Read), (8 bytes).
    Removing uart.o(.text.UART_SetLineConfig), (344 bytes).
    Removing uart.o(.ARM.exidx.text.UART_SetLineConfig), (8 bytes).
    Removing uart.o(.text.UART_SetTimeoutCnt), (20 bytes).
    Removing uart.o(.ARM.exidx.text.UART_SetTimeoutCnt), (8 bytes).
    Removing uart.o(.text.UART_SelectIrDAMode), (358 bytes).
    Removing uart.o(.ARM.exidx.text.UART_SelectIrDAMode), (8 bytes).
    Removing uart.o(.text.UART_SelectRS485Mode), (34 bytes).
    Removing uart.o(.ARM.exidx.text.UART_SelectRS485Mode), (8 bytes).
    Removing uart.o(.text.UART_SelectLINMode), (22 bytes).
    Removing uart.o(.ARM.exidx.text.UART_SelectLINMode), (8 bytes).
    Removing uart.o(.text.UART_Write), (190 bytes).
    Removing uart.o(.ARM.exidx.text.UART_Write), (8 bytes).
    Removing uart.o(.rodata.cst16), (16 bytes).
    Removing gpio.o(.text), (0 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_SetMode), (8 bytes).
    Removing gpio.o(.text.GPIO_EnableInt), (50 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_EnableInt), (8 bytes).
    Removing gpio.o(.text.GPIO_DisableInt), (30 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_DisableInt), (8 bytes).
    Removing gpio.o(.text.GPIO_SetSlewCtl), (264 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_SetSlewCtl), (8 bytes).
    Removing gpio.o(.text.GPIO_SetPullCtl), (264 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_SetPullCtl), (8 bytes).
    Removing eadc.o(.text), (0 bytes).
    Removing eadc.o(.text.EADC_Open), (104 bytes).
    Removing eadc.o(.ARM.exidx.text.EADC_Open), (8 bytes).
    Removing eadc.o(.text.EADC_Close), (10 bytes).
    Removing eadc.o(.ARM.exidx.text.EADC_Close), (8 bytes).
    Removing eadc.o(.text.EADC_ConfigSampleModule), (38 bytes).
    Removing eadc.o(.ARM.exidx.text.EADC_ConfigSampleModule), (8 bytes).
    Removing eadc.o(.text.EADC_SetTriggerDelayTime), (36 bytes).
    Removing eadc.o(.ARM.exidx.text.EADC_SetTriggerDelayTime), (8 bytes).
    Removing eadc.o(.text.EADC_SetExtendSampleTime), (30 bytes).
    Removing eadc.o(.ARM.exidx.text.EADC_SetExtendSampleTime), (8 bytes).
    Removing eadc.o(.bss.g_EADC_i32ErrCode), (4 bytes).
    Removing ebi.o(.text), (0 bytes).
    Removing ebi.o(.text.EBI_Open), (292 bytes).
    Removing ebi.o(.ARM.exidx.text.EBI_Open), (8 bytes).
    Removing ebi.o(.text.EBI_Close), (18 bytes).
    Removing ebi.o(.ARM.exidx.text.EBI_Close), (8 bytes).
    Removing ebi.o(.text.EBI_SetBusTiming), (36 bytes).
    Removing ebi.o(.ARM.exidx.text.EBI_SetBusTiming), (8 bytes).
    Removing ddiv.o(.text), (222 bytes).
    Removing dflti.o(.text), (34 bytes).
    Removing dfixi.o(.text), (62 bytes).
    Removing depilogue.o(.text), (186 bytes).
    Removing dadd.o(.text), (334 bytes).
    Removing dmul.o(.text), (228 bytes).
    Removing dfixul.o(.text), (48 bytes).
    Removing cdrcmple.o(.text), (48 bytes).

249 unused section(s) (total 12320 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfb.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf0.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf1.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf2.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf3.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf4.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf5.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf6.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf7.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf8.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/printf/stubs.s          0x00000000   Number         0  printfstubs.o ABSOLUTE
    ../clib/microlib/stdio/fputs.c           0x00000000   Number         0  fputs.o ABSOLUTE
    ../clib/microlib/stdio/fputs.c           0x00000000   Number         0  fputs_e.o ABSOLUTE
    ../clib/microlib/stdio/fwrite.c          0x00000000   Number         0  fwrite.o ABSOLUTE
    ../clib/microlib/stdio/fwrite.c          0x00000000   Number         0  fwrite_e.o ABSOLUTE
    ../clib/microlib/stdio/puts.c            0x00000000   Number         0  puts.o ABSOLUTE
    ../clib/microlib/stdio/puts.c            0x00000000   Number         0  puts_e.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stderr.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixi.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dflti.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    EBI_LCD_Module.c                         0x00000000   Number         0  ebi_lcd_module.o ABSOLUTE
    Library/Device/Nuvoton/M480/Source/ARM/startup_M480.s 0x00000000   Number         0  startup_m480.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    clk.c                                    0x00000000   Number         0  clk.o ABSOLUTE
    eadc.c                                   0x00000000   Number         0  eadc.o ABSOLUTE
    ebi.c                                    0x00000000   Number         0  ebi.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    retarget.c                               0x00000000   Number         0  retarget.o ABSOLUTE
    sys.c                                    0x00000000   Number         0  sys.o ABSOLUTE
    system_M480.c                            0x00000000   Number         0  system_m480.o ABSOLUTE
    timer.c                                  0x00000000   Number         0  timer.o ABSOLUTE
    uart.c                                   0x00000000   Number         0  uart.o ABSOLUTE
    RESET                                    0x00000000   Section      500  startup_m480.o(RESET)
    .ARM.Collect$$$$00000000                 0x000001f4   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x000001f4   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x000001f8   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x000001fc   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x000001fc   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x000001fc   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x00000204   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x00000204   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x00000204   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x00000204   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    $v0                                      0x00000208   Number         0  startup_m480.o(.text)
    .text                                    0x00000208   Section      124  startup_m480.o(.text)
    Default_Handler                          0x00000269   Thumb Code     2  startup_m480.o(.text)
    .text                                    0x00000284   Section        0  uldiv.o(.text)
    .text                                    0x000002e6   Section        0  llushr.o(.text)
    .text                                    0x00000308   Section       48  init.o(.text)
    .text                                    0x00000338   Section        0  llshl.o(.text)
    [Anonymous Symbol]                       0x00000358   Section        0  clk.o(.text.CLK_EnableModuleClock)
    [Anonymous Symbol]                       0x0000037c   Section        0  clk.o(.text.CLK_GetPLLClockFreq)
    [Anonymous Symbol]                       0x000003d4   Section        0  ebi_lcd_module.o(.text.EADC01_IRQHandler)
    [Anonymous Symbol]                       0x000003f0   Section        0  main.o(.text.EBI_LCD_Init)
    [Anonymous Symbol]                       0x000004c0   Section        0  gpio.o(.text.GPIO_SetMode)
    [Anonymous Symbol]                       0x000005c8   Section        0  ebi_lcd_module.o(.text.ILI9341_Initial)
    [Anonymous Symbol]                       0x000008b8   Section        0  ebi_lcd_module.o(.text.LCD_BlankArea)
    [Anonymous Symbol]                       0x00000b40   Section        0  main.o(.text.LCD_Draw_Circle)
    [Anonymous Symbol]                       0x00000c58   Section        0  main.o(.text.LCD_Draw_Rectangular)
    [Anonymous Symbol]                       0x00000d08   Section        0  ebi_lcd_module.o(.text.LCD_Picture)
    [Anonymous Symbol]                       0x0000100c   Section        0  ebi_lcd_module.o(.text.LCD_SetWindow)
    [Anonymous Symbol]                       0x00001064   Section        0  ebi_lcd_module.o(.text.LCD_WR_DATA)
    [Anonymous Symbol]                       0x00001070   Section        0  retarget.o(.text.ProcessHardFault)
    [Anonymous Symbol]                       0x0000120c   Section        0  system_m480.o(.text.SystemCoreClockUpdate)
    [Anonymous Symbol]                       0x00001274   Section        0  system_m480.o(.text.SystemInit)
    [Anonymous Symbol]                       0x000012e4   Section        0  main.o(.text.TMR1_IRQHandler)
    [Anonymous Symbol]                       0x000012f4   Section        0  ebi_lcd_module.o(.text.TMR3_IRQHandler)
    [Anonymous Symbol]                       0x00001320   Section        0  retarget.o(.text.fputc)
    [Anonymous Symbol]                       0x0000136c   Section        0  main.o(.text.main)
    i.__0printf$8                            0x00001690   Section        0  printf8.o(i.__0printf$8)
    i.__scatterload_copy                     0x000016b0   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x000016be   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x000016c0   Section       14  handlers.o(i.__scatterload_zeroinit)
    _printf_core                             0x000016d1   Thumb Code   996  printf8.o(i._printf_core)
    i._printf_core                           0x000016d0   Section        0  printf8.o(i._printf_core)
    _printf_post_padding                     0x00001ae1   Thumb Code    36  printf8.o(i._printf_post_padding)
    i._printf_post_padding                   0x00001ae0   Section        0  printf8.o(i._printf_post_padding)
    _printf_pre_padding                      0x00001b05   Thumb Code    46  printf8.o(i._printf_pre_padding)
    i._printf_pre_padding                    0x00001b04   Section        0  printf8.o(i._printf_pre_padding)
    i.puts                                   0x00001b34   Section        0  puts.o(i.puts)
    .L__const.CLK_GetPLLClockFreq.au8NoTbl   0x00001b58   Data           4  clk.o(.rodata.cst4)
    .L.str.8                                 0x000040dc   Data          32  retarget.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x000040dc   Section        0  retarget.o(.rodata.str1.1)
    .L.str.11                                0x000040fc   Data          29  retarget.o(.rodata.str1.1)
    .L.str.7                                 0x00004119   Data          27  retarget.o(.rodata.str1.1)
    .L.str.9                                 0x00004134   Data           4  retarget.o(.rodata.str1.1)
    .L.str.10                                0x00004138   Data           4  retarget.o(.rodata.str1.1)
    .Lstr.16                                 0x0000413c   Data          35  retarget.o(.rodata.str1.1)
    STACK                                    0x20000090   Section     2048  startup_m480.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_m480.o(RESET)
    _printf_a                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_c                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_charcount                        0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_d                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_e                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_f                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_fp_dec                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_fp_hex                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_g                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_i                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_int_dec                          0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_l                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lc                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_ll                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lld                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lli                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llo                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llu                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llx                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_dec                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_hex                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_oct                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_ls                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_mbtowc                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_n                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_o                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_p                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_percent                          0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_pre_padding                      0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_s                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_str                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_truncate_signed                  0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_truncate_unsigned                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_u                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_wc                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_wctomb                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_x                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_End                            0x000001f4   Data           0  startup_m480.o(RESET)
    __Vectors_Size                           0x000001f4   Number         0  startup_m480.o ABSOLUTE
    __main                                   0x000001f5   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x000001f5   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x000001f9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x000001fd   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x000001fd   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x000001fd   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x000001fd   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x00000205   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x00000205   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x00000209   Thumb Code    64  startup_m480.o(.text)
    NMI_Handler                              0x00000249   Thumb Code     2  startup_m480.o(.text)
    HardFault_Handler                        0x0000024b   Thumb Code    16  startup_m480.o(.text)
    MemManage_Handler                        0x0000025b   Thumb Code     2  startup_m480.o(.text)
    BusFault_Handler                         0x0000025d   Thumb Code     2  startup_m480.o(.text)
    UsageFault_Handler                       0x0000025f   Thumb Code     2  startup_m480.o(.text)
    SVC_Handler                              0x00000261   Thumb Code     2  startup_m480.o(.text)
    DebugMon_Handler                         0x00000263   Thumb Code     2  startup_m480.o(.text)
    PendSV_Handler                           0x00000265   Thumb Code     2  startup_m480.o(.text)
    SysTick_Handler                          0x00000267   Thumb Code     2  startup_m480.o(.text)
    ACMP01_IRQHandler                        0x00000269   Thumb Code     0  startup_m480.o(.text)
    BOD_IRQHandler                           0x00000269   Thumb Code     0  startup_m480.o(.text)
    BPWM0_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    BPWM1_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    BRAKE0_IRQHandler                        0x00000269   Thumb Code     0  startup_m480.o(.text)
    BRAKE1_IRQHandler                        0x00000269   Thumb Code     0  startup_m480.o(.text)
    CAN0_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    CAN1_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    CAN2_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    CCAP_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    CKFAIL_IRQHandler                        0x00000269   Thumb Code     0  startup_m480.o(.text)
    CRYPTO_IRQHandler                        0x00000269   Thumb Code     0  startup_m480.o(.text)
    DAC_IRQHandler                           0x00000269   Thumb Code     0  startup_m480.o(.text)
    EADC00_IRQHandler                        0x00000269   Thumb Code     0  startup_m480.o(.text)
    EADC02_IRQHandler                        0x00000269   Thumb Code     0  startup_m480.o(.text)
    EADC03_IRQHandler                        0x00000269   Thumb Code     0  startup_m480.o(.text)
    EADC10_IRQHandler                        0x00000269   Thumb Code     0  startup_m480.o(.text)
    EADC11_IRQHandler                        0x00000269   Thumb Code     0  startup_m480.o(.text)
    EADC12_IRQHandler                        0x00000269   Thumb Code     0  startup_m480.o(.text)
    EADC13_IRQHandler                        0x00000269   Thumb Code     0  startup_m480.o(.text)
    ECAP0_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    ECAP1_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    EHCI_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    EINT0_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    EINT1_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    EINT2_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    EINT3_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    EINT4_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    EINT5_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    EINT6_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    EINT7_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    EMAC_RX_IRQHandler                       0x00000269   Thumb Code     0  startup_m480.o(.text)
    EMAC_TX_IRQHandler                       0x00000269   Thumb Code     0  startup_m480.o(.text)
    EPWM0P0_IRQHandler                       0x00000269   Thumb Code     0  startup_m480.o(.text)
    EPWM0P1_IRQHandler                       0x00000269   Thumb Code     0  startup_m480.o(.text)
    EPWM0P2_IRQHandler                       0x00000269   Thumb Code     0  startup_m480.o(.text)
    EPWM1P0_IRQHandler                       0x00000269   Thumb Code     0  startup_m480.o(.text)
    EPWM1P1_IRQHandler                       0x00000269   Thumb Code     0  startup_m480.o(.text)
    EPWM1P2_IRQHandler                       0x00000269   Thumb Code     0  startup_m480.o(.text)
    GPA_IRQHandler                           0x00000269   Thumb Code     0  startup_m480.o(.text)
    GPB_IRQHandler                           0x00000269   Thumb Code     0  startup_m480.o(.text)
    GPC_IRQHandler                           0x00000269   Thumb Code     0  startup_m480.o(.text)
    GPD_IRQHandler                           0x00000269   Thumb Code     0  startup_m480.o(.text)
    GPE_IRQHandler                           0x00000269   Thumb Code     0  startup_m480.o(.text)
    GPF_IRQHandler                           0x00000269   Thumb Code     0  startup_m480.o(.text)
    GPG_IRQHandler                           0x00000269   Thumb Code     0  startup_m480.o(.text)
    GPH_IRQHandler                           0x00000269   Thumb Code     0  startup_m480.o(.text)
    I2C0_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    I2C1_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    I2C2_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    I2S0_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    IRC_IRQHandler                           0x00000269   Thumb Code     0  startup_m480.o(.text)
    OHCI_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    OPA0_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    PDMA_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    PWRWU_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    QEI0_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    QEI1_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    QSPI0_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    QSPI1_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    RAMPE_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    RTC_IRQHandler                           0x00000269   Thumb Code     0  startup_m480.o(.text)
    SC0_IRQHandler                           0x00000269   Thumb Code     0  startup_m480.o(.text)
    SC1_IRQHandler                           0x00000269   Thumb Code     0  startup_m480.o(.text)
    SC2_IRQHandler                           0x00000269   Thumb Code     0  startup_m480.o(.text)
    SDH0_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    SDH1_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    SPI0_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    SPI1_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    SPI2_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    SPI3_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    SPIM_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    TAMPER_IRQHandler                        0x00000269   Thumb Code     0  startup_m480.o(.text)
    TMR0_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    TMR2_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    TRNG_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    UART0_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    UART1_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    UART2_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    UART3_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    UART4_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    UART5_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    UART6_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    UART7_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    USBD20_IRQHandler                        0x00000269   Thumb Code     0  startup_m480.o(.text)
    USBD_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    USBOTG20_IRQHandler                      0x00000269   Thumb Code     0  startup_m480.o(.text)
    USBOTG_IRQHandler                        0x00000269   Thumb Code     0  startup_m480.o(.text)
    USCI0_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    USCI1_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    WDT_IRQHandler                           0x00000269   Thumb Code     0  startup_m480.o(.text)
    WWDT_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    __aeabi_uldivmod                         0x00000285   Thumb Code    98  uldiv.o(.text)
    __aeabi_llsr                             0x000002e7   Thumb Code    32  llushr.o(.text)
    _ll_ushift_r                             0x000002e7   Thumb Code     0  llushr.o(.text)
    __scatterload                            0x00000309   Thumb Code    38  init.o(.text)
    __scatterload_rt2                        0x00000309   Thumb Code     0  init.o(.text)
    __aeabi_llsl                             0x00000339   Thumb Code    30  llshl.o(.text)
    _ll_shift_l                              0x00000339   Thumb Code     0  llshl.o(.text)
    CLK_EnableModuleClock                    0x00000359   Thumb Code    34  clk.o(.text.CLK_EnableModuleClock)
    CLK_GetPLLClockFreq                      0x0000037d   Thumb Code    86  clk.o(.text.CLK_GetPLLClockFreq)
    EADC01_IRQHandler                        0x000003d5   Thumb Code    26  ebi_lcd_module.o(.text.EADC01_IRQHandler)
    EBI_LCD_Init                             0x000003f1   Thumb Code   208  main.o(.text.EBI_LCD_Init)
    GPIO_SetMode                             0x000004c1   Thumb Code   264  gpio.o(.text.GPIO_SetMode)
    ILI9341_Initial                          0x000005c9   Thumb Code   716  ebi_lcd_module.o(.text.ILI9341_Initial)
    LCD_BlankArea                            0x000008b9   Thumb Code   646  ebi_lcd_module.o(.text.LCD_BlankArea)
    LCD_Draw_Circle                          0x00000b41   Thumb Code   280  main.o(.text.LCD_Draw_Circle)
    LCD_Draw_Rectangular                     0x00000c59   Thumb Code   174  main.o(.text.LCD_Draw_Rectangular)
    LCD_Picture                              0x00000d09   Thumb Code   772  ebi_lcd_module.o(.text.LCD_Picture)
    LCD_SetWindow                            0x0000100d   Thumb Code    88  ebi_lcd_module.o(.text.LCD_SetWindow)
    LCD_WR_DATA                              0x00001065   Thumb Code    10  ebi_lcd_module.o(.text.LCD_WR_DATA)
    ProcessHardFault                         0x00001071   Thumb Code   264  retarget.o(.text.ProcessHardFault)
    SystemCoreClockUpdate                    0x0000120d   Thumb Code   104  system_m480.o(.text.SystemCoreClockUpdate)
    SystemInit                               0x00001275   Thumb Code   112  system_m480.o(.text.SystemInit)
    TMR1_IRQHandler                          0x000012e5   Thumb Code    14  main.o(.text.TMR1_IRQHandler)
    TMR3_IRQHandler                          0x000012f5   Thumb Code    44  ebi_lcd_module.o(.text.TMR3_IRQHandler)
    fputc                                    0x00001321   Thumb Code    74  retarget.o(.text.fputc)
    main                                     0x0000136d   Thumb Code   784  main.o(.text.main)
    __0printf$8                              0x00001691   Thumb Code    22  printf8.o(i.__0printf$8)
    __1printf$8                              0x00001691   Thumb Code     0  printf8.o(i.__0printf$8)
    __2printf                                0x00001691   Thumb Code     0  printf8.o(i.__0printf$8)
    __scatterload_copy                       0x000016b1   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x000016bf   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x000016c1   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    puts                                     0x00001b35   Thumb Code    30  puts.o(i.puts)
    sample_image                             0x00001b5c   Data        9600  main.o(.rodata.sample_image)
    Region$$Table$$Base                      0x00004160   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00004180   Number         0  anon$$obj.o(Region$$Table)
    CyclesPerUs                              0x20000000   Data           4  system_m480.o(.data.CyclesPerUs)
    PllClock                                 0x20000004   Data           4  system_m480.o(.data.PllClock)
    SystemCoreClock                          0x20000008   Data           4  system_m480.o(.data.SystemCoreClock)
    gau32ClkSrcTbl                           0x2000000c   Data          32  system_m480.o(.data.gau32ClkSrcTbl)
    Timer3_cnt                               0x20000030   Data           1  ebi_lcd_module.o(.bss.Timer3_cnt)
    Timer3_flag                              0x20000031   Data           1  ebi_lcd_module.o(.bss.Timer3_flag)
    __stdout                                 0x20000034   Data          84  retarget.o(.bss.__stdout)
    g_u32AdcIntFlag_TP                       0x20000088   Data           4  ebi_lcd_module.o(.bss.g_u32AdcIntFlag_TP)
    __initial_sp                             0x20000890   Data           0  startup_m480.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000209

  Load Region LR_1 (Base: 0x00000000, Size: 0x000041ac, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00004180, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000001f4   Data   RO           19    RESET               startup_m480.o
    0x000001f4   0x000001f4   0x00000000   Code   RO          357  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x000001f4   0x000001f4   0x00000004   Code   RO          638    .ARM.Collect$$$$00000001  mc_w.l(entry2.o)
    0x000001f8   0x000001f8   0x00000004   Code   RO          641    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x000001fc   0x000001fc   0x00000000   Code   RO          643    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x000001fc   0x000001fc   0x00000000   Code   RO          645    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x000001fc   0x000001fc   0x00000008   Code   RO          646    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x00000204   0x00000204   0x00000000   Code   RO          648    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x00000204   0x00000204   0x00000000   Code   RO          650    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x00000204   0x00000204   0x00000004   Code   RO          639    .ARM.Collect$$$$00002712  mc_w.l(entry2.o)
    0x00000208   0x00000208   0x0000007c   Code   RO           20  * .text               startup_m480.o
    0x00000284   0x00000284   0x00000062   Code   RO          663    .text               mc_w.l(uldiv.o)
    0x000002e6   0x000002e6   0x00000020   Code   RO          665    .text               mc_w.l(llushr.o)
    0x00000306   0x00000306   0x00000002   PAD
    0x00000308   0x00000308   0x00000030   Code   RO          678    .text               mc_w.l(init.o)
    0x00000338   0x00000338   0x0000001e   Code   RO          680    .text               mc_w.l(llshl.o)
    0x00000356   0x00000356   0x00000002   PAD
    0x00000358   0x00000358   0x00000022   Code   RO          104    .text.CLK_EnableModuleClock  clk.o
    0x0000037a   0x0000037a   0x00000002   PAD
    0x0000037c   0x0000037c   0x00000056   Code   RO          140    .text.CLK_GetPLLClockFreq  clk.o
    0x000003d2   0x000003d2   0x00000002   PAD
    0x000003d4   0x000003d4   0x0000001a   Code   RO           85    .text.EADC01_IRQHandler  ebi_lcd_module.o
    0x000003ee   0x000003ee   0x00000002   PAD
    0x000003f0   0x000003f0   0x000000d0   Code   RO           35    .text.EBI_LCD_Init  main.o
    0x000004c0   0x000004c0   0x00000108   Code   RO          307    .text.GPIO_SetMode  gpio.o
    0x000005c8   0x000005c8   0x000002f0   Code   RO           75    .text.ILI9341_Initial  ebi_lcd_module.o
    0x000008b8   0x000008b8   0x00000286   Code   RO           79    .text.LCD_BlankArea  ebi_lcd_module.o
    0x00000b3e   0x00000b3e   0x00000002   PAD
    0x00000b40   0x00000b40   0x00000118   Code   RO           39    .text.LCD_Draw_Circle  main.o
    0x00000c58   0x00000c58   0x000000ae   Code   RO           37    .text.LCD_Draw_Rectangular  main.o
    0x00000d06   0x00000d06   0x00000002   PAD
    0x00000d08   0x00000d08   0x00000304   Code   RO           61    .text.LCD_Picture   ebi_lcd_module.o
    0x0000100c   0x0000100c   0x00000058   Code   RO           63    .text.LCD_SetWindow  ebi_lcd_module.o
    0x00001064   0x00001064   0x0000000a   Code   RO           65    .text.LCD_WR_DATA   ebi_lcd_module.o
    0x0000106e   0x0000106e   0x00000002   PAD
    0x00001070   0x00001070   0x0000019c   Code   RO          172    .text.ProcessHardFault  retarget.o
    0x0000120c   0x0000120c   0x00000068   Code   RO            2    .text.SystemCoreClockUpdate  system_m480.o
    0x00001274   0x00001274   0x00000070   Code   RO            4    .text.SystemInit    system_m480.o
    0x000012e4   0x000012e4   0x0000000e   Code   RO           47    .text.TMR1_IRQHandler  main.o
    0x000012f2   0x000012f2   0x00000002   PAD
    0x000012f4   0x000012f4   0x0000002c   Code   RO           67    .text.TMR3_IRQHandler  ebi_lcd_module.o
    0x00001320   0x00001320   0x0000004a   Code   RO          186    .text.fputc         retarget.o
    0x0000136a   0x0000136a   0x00000002   PAD
    0x0000136c   0x0000136c   0x00000324   Code   RO           49    .text.main          main.o
    0x00001690   0x00001690   0x00000020   Code   RO          578    i.__0printf$8       mc_w.l(printf8.o)
    0x000016b0   0x000016b0   0x0000000e   Code   RO          686    i.__scatterload_copy  mc_w.l(handlers.o)
    0x000016be   0x000016be   0x00000002   Code   RO          687    i.__scatterload_null  mc_w.l(handlers.o)
    0x000016c0   0x000016c0   0x0000000e   Code   RO          688    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x000016ce   0x000016ce   0x00000002   PAD
    0x000016d0   0x000016d0   0x00000410   Code   RO          585    i._printf_core      mc_w.l(printf8.o)
    0x00001ae0   0x00001ae0   0x00000024   Code   RO          586    i._printf_post_padding  mc_w.l(printf8.o)
    0x00001b04   0x00001b04   0x0000002e   Code   RO          587    i._printf_pre_padding  mc_w.l(printf8.o)
    0x00001b32   0x00001b32   0x00000002   PAD
    0x00001b34   0x00001b34   0x00000024   Code   RO          360    i.puts              mc_w.l(puts.o)
    0x00001b58   0x00001b58   0x00000004   Data   RO          159    .rodata.cst4        clk.o
    0x00001b5c   0x00001b5c   0x00002580   Data   RO           51    .rodata.sample_image  main.o
    0x000040dc   0x000040dc   0x00000083   Data   RO          192    .rodata.str1.1      retarget.o
    0x0000415f   0x0000415f   0x00000001   PAD
    0x00004160   0x00004160   0x00000020   Data   RO          685    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x00004180, Size: 0x0000002c, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00004180   0x00000004   Data   RW            7    .data.CyclesPerUs   system_m480.o
    0x20000004   0x00004184   0x00000004   Data   RW            8    .data.PllClock      system_m480.o
    0x20000008   0x00004188   0x00000004   Data   RW            6    .data.SystemCoreClock  system_m480.o
    0x2000000c   0x0000418c   0x00000020   Data   RW            9    .data.gau32ClkSrcTbl  system_m480.o


    Execution Region ER_ZI (Exec base: 0x20000030, Load base: 0x000041ac, Size: 0x00000860, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000030        -       0x00000001   Zero   RW           88    .bss.Timer3_cnt     ebi_lcd_module.o
    0x20000031        -       0x00000001   Zero   RW           87    .bss.Timer3_flag    ebi_lcd_module.o
    0x20000032   0x000041ac   0x00000002   PAD
    0x20000034        -       0x00000054   Zero   RW          193    .bss.__stdout       retarget.o
    0x20000088        -       0x00000004   Zero   RW           89    .bss.g_u32AdcIntFlag_TP  ebi_lcd_module.o
    0x2000008c   0x000041ac   0x00000004   PAD
    0x20000090        -       0x00000800   Zero   RW           17    STACK               startup_m480.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       120          0          4          0          0      17306   clk.o
      2338         36          0          0          6      17261   ebi_lcd_module.o
       264          0          0          0          0       2682   gpio.o
      1480         20       9600          0          0      12976   main.o
       486        148        131          0         84       5465   retarget.o
       124         26        500          0       2048        916   startup_m480.o
       216          0          0         44          0       4286   system_m480.o

    ----------------------------------------------------------------------
      5044        230      10268         44       2144      60892   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        16          0          1          0          6          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        48         10          0          0          0         68   init.o
        30          0          0          0          0         68   llshl.o
        32          0          0          0          0         68   llushr.o
      1154         54          0          0          0        352   printf8.o
        36          6          0          0          0         80   puts.o
        98          0          0          0          0         92   uldiv.o

    ----------------------------------------------------------------------
      1456         78          0          0          0        728   Library Totals
         8          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1448         78          0          0          0        728   mc_w.l

    ----------------------------------------------------------------------
      1456         78          0          0          0        728   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      6500        308      10268         44       2144      61412   Grand Totals
      6500        308      10268         44       2144      61412   ELF Image Totals
      6500        308      10268         44          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                16768 (  16.38kB)
    Total RW  Size (RW Data + ZI Data)              2188 (   2.14kB)
    Total ROM Size (Code + RO Data + RW Data)      16812 (  16.42kB)

==============================================================================

